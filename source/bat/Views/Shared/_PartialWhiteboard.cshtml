@model bat.logic.ViewModels.Partials.IPartialWhiteboard
<div class="board-container">
    <script>
        $(function () {
            $("ul.dropdown-menu").on("click", "[data-keepOpenOnClick]", function (e) {
                e.stopPropagation();
            });
        });
    </script>

    <div id="board-wrap">
        <input id="getChatHistoryPath" type="hidden" value="@Url.HttpRouteUrl("api/chat/gethistory", new { controller = "ChatApi", action = "GetChatHistory" })" />
        <div id="board-top">
            <div class="fleft">
                <div class="btn-group">
                    <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown">File <span class="caret"></span></button>
                    <ul class="dropdown-menu file-menu" role="menu">
                        <li class="center">
                            <button onclick="defaultBoard()" type="button" style="width: 80%;" class="btn">New</button>
                        </li>
                        <li class="divider"></li>
                        <li class="center">
                            <button onclick="clearBoard()" type="button" style="width: 80%;" class="btn">Clear</button>
                        </li>
                        <li class="divider"></li>
                        <li>Upload:</li>
                        @using (Html.BeginForm("Upload", "Lessons", new { id = Model.lesson.ID }, FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            <li>
                                <label data-keepOpenOnClick for="title">Title:</label>
                                <input data-keepOpenOnClick type="text" name="title" id="title" />
                                <input data-keepOpenOnClick type="submit" />
                            </li>
                            <li>
                                <label data-keepOpenOnClick for="data">File:</label>
                                <input data-keepOpenOnClick type="file" name="data" id="data" />
                            </li>
                        }
                        <li class="divider"></li>
                        <li>Upload:</li>
                        <li>
                            <input type="file" name="data" id="pdfData" />
                        </li>
                        <li class="divider"></li>
                        <li>Save the board:</li>
                        <li id="imgSaveSuccess" class="hidden">
                            <i class="fa fa-check"></i>
                        </li>
                        <li id="imgSaveFail" class="hidden">
                            <i class="fa fa-exclamation-triangle"></i>
                        </li>
                        <li>
                            <form>
                                <label data-keepOpenOnClick for="saveTitle">Title:</label>
                                <input data-keepOpenOnClick type="text" id="saveTitle" name="saveTitle">
                                <input data-keepOpenOnClick type="button" onclick="saveImg('@Model.lesson.ID')" value="Save">
                            </form>
                        </li>
                        <li class="divider"></li>
                        <li>Load an image:</li>
                        @foreach (var attachment in Model.attachments)
                        {
                            <li>
                                <button onclick="loadImg('@attachment.ID')">
                                    @attachment.Title
                                </button>
                            </li>
                        }
                    </ul>
                </div>
                </div>
            <div class="fright">
                <label for="lWSlider">Line Width:</label>
                <input type="range" id="lWSlider" class="bb-slider" onchange="changeLW(lWSlider.value)" value="3" min="1" max="5" />
                <label for="lWSlider">Chalk Colour:</label>
                <input name="chalkColor" id="chalkColor" type="color" onchange="changeColor(chalkColor.value)" />
            </div>
        </div>
        <div id="board-inner">
            <div id="blackBoard">
                <canvas id="canvas" style="align-content:center"></canvas>
            </div>
        </div>
    </div><!-- /board-wrap-->
    <div class="shadow2"><img style="width:100%" src="@Url.Content("~/assets/img/shadow.png")"></div>

    <!-- Modal -->
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Upload PDF</h4>
                </div>
                <div class="modal-body">
                    <div id="pdfContainer" style="width:100%;">
                        <canvas id="pdfCanvas"></canvas>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="savePDF('@Model.lesson.ID')">Upload Image</button>
                </div>
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/Scripts/jquery.signalR-2.2.0.min.js")
@Scripts.Render("~/signalr/hubs")
@Scripts.Render("~/assets/vendor/pdf.js/build/pdf.js")
@Scripts.Render("~/assets/js/uploadPDF.js")
@Scripts.Render("~/assets/js/blackboard.js")